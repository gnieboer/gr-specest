id: specest_music_vcf
label: RMUSIC Frequency Estimator
category: Spectrum Estimation

parameters:
-   id: n
    label: 'Model parameter: number of sinusoids'
    dtype: int
    default: '6'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: m
    label: 'Model parameter: considered shift for correlation'
    dtype: int
    default: '7'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: nsamples
    label: 'Parameter: considered number of samples'
    dtype: int
    default: '512'
    hide: ${ 'part' if vlen == 1 else 'none' }

inputs:
-   domain: stream
    dtype: complex
    vlen: ${ nsamples }

outputs:
-   domain: stream
    dtype: float
    vlen: ${ n }

templates:
    imports: import specest
    make: specest.music_vcf(${n}, ${m}, ${nsamples})

documentation: "Root MUSIC Frequency Estimator\n\n\tParameters:\n\t  n: number of\
    \ expected sinusoids, n<m\n\t  m: dimension of the correlation matrix. Governs\
    \ the quality of the estimate.\n\t  nsamples: considered samples per estimate\n\
    \n\tMUSIC (Multiple Signal Classification) is a subspace oriented parametric spectrum\
    \ estimator.\n\n\tIt works primarily by correlating a series of samples in a correlation\
    \ matrix,\n\tdecomposing it into orthogonal eigenvectors, building a noise subspace\
    \ from the\n\teigenvectors belonging to the (m-n) smallest eigenvalues, and finding\
    \ the sinusoid\n\tfrequencies, for which the projection length into this subspace\
    \ equals zero.\n\n\tFor this method to work, it is necessary that n<m.\n\n\tFor\
    \ another subspace oriented frequency estimator, see specest_esprit_vcf."

file_format: 1
