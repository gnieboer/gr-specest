IMPORTANT NOTICE
~~~~~~~~~~~~~~~~

The information stated below refers to a pre-3.7 GNU Radio installation,
but is still correct to a large part. The only notable difference is, that
libgnuradio-core does no longer exist and instead the components runtime, 
blocks, fft, and filter are needed. All these dependencies should be satisfied
with a standard GNU Radio (>=3.7) installation.
However, the current master branch is based on a GNU Radio version >=3.7.
The GR3.6 version of gr-specest can be found on the 'GR36' branch. 

Howto build:
~~~~~~~~~~~~
In order to sucessfully build the gr-specest modules you will need:
* cmake > 3.8
* swig
* libgnuradio-core
* libuhd
* gfortran (others might work as well, not tested)
* liblapack-dev
* libblas-dev

A note on Fortran: The fort77 compiler does *not* work here. However, if
you have both a current gfortran version and the old fort77 installed, it
might happen that CMake detects the wrong version. Either specify the
compiler manually or delete the old Fortran compiler.

After checking out the code from the repository, change to the gr-specest
directory. If you want to build with a different compiler such as clang
you might have to do something like:

export CXX=clang++
export CC=clang

before.

Create a new directory e.g. 'build' to do an out of source build:

mkdir build
cd build
cmake ../
make
make test # optional
make install # might need a 'sudo' depending on your installation directory

For more information refer to the cmake documentation.

Howto add your own blocks to the GNU Radio Spectral Estimation Toolbox:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* Use gr_modtool add for C++ blocks or append '-l python' for Python blocks.

Adding a new C++ file that does not depend on Armadillo:
--------------------------------------------------------
* As stated above, use gr_modtool as it handles all the block related build system stuff for you.
* If you want to add additional C++ files, add them in the CMakeLists.txt files in the include and lib folders.

Adding a new C++ file that does depend on Armadillo:
-----------------------------------------------------
* For now, don't do it, as we're trying to get rid of the dependency sooner or later

Adding a new Fortran file:
--------------------------
* As stated above, Fortran code goes into lib/
* Up to now we're wrapping the fortran code into specesti_ implementation blocks
  so we don't have unittests to directly test the fortran code
* Your code goes into specesti_{c,z,f,d}yourblock.f90
* To include your files in the buildsystem add them to the file
  lib/CMakeLists.txt by editing the following variables:
    * F_SRCS (Sourcecode)

Adding a new Python file:
--------------------------
* As stated above, gr_modtool handles this for blocks.
* If you want to add other Python files, put them in the python folder and add the files in the CMakeLists.txt there.

Swig integration:
-----------------
* Handled by gr_modtool for blocks in the swig folder. Other files go there as well, please
  refer to the SWIG documentation for details on how to do it.

Enjoy, and please report any bugs or improvements to:
felix dot wunsch at kit dot edu
